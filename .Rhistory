add2(3,5)
add2(3,5)
add2<-function(x,y) {
x+y
}
add2(3,5)
above <-function(x,n) {
use <- x>n
x[use]
}
x<-1:20
above(x,13)
lm
source('~/R/ProgrammingAssignment2/cachematrix.R')
mat=matrix(c(1,2,3,4),2,2)
mat
makeCacheMatrix(mat)
mymat=makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
mymat$get()
mymat$getinverse()
source('~/R/ProgrammingAssignment2/cachematrix.R')
source('~/R/ProgrammingAssignment2/cachematrix.R')
mat
mat$get()
traceback
mymat=makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
mymat$get()
cacheSolve(mymat)
mymat$getinverse()
cacheSolve(mymat)
source('~/R/ProgrammingAssignment2/cachematrix.R')
mymat$getinverse()
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
library(pollution)
libarary(airquality)
library(airquality)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
install.packages("httr")
library(httr)
url<-http://biostat.jhsph.edu/~jleek/contact.html
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
html<-GET(url)
head(html)
content2=content(html,as="text")
ph=htmlParse(content2,asText=TRUE)
library(xml)
library(XML)
ph=htmlParse(content2,asText=TRUE)
head(ph)
ppois(5,lamda=10)
ppois(5,lambda=10)
ppois(10,lambda=5)
ppois(10,lambda=5)^3
ppois(15,lambda=10)
ppois(10,lambda=15)
q()
df <- data.frame(x = c("a", "b"), y = c(3, 4), z = c(5, 6))
df
df %>% spread(x, y)
library(tidyr)
df %>% spread(x, y)
spread(df,x, y)
source('~/R/RepData_PeerAssessment1/PA1.R')
setwd("~/R/RepData_PeerAssessment1")
source('~/R/RepData_PeerAssessment1/PA1.R')
source('~/R/RepData_PeerAssessment1/PA1.R')
table(blergh$daytype)
as.data.frame(c("E","L","P","N"))
test <- as.data.frame(c("E","L","P","N"))
colname(test)<-letter
colname(test)<-"letter"
colnames(test)<-"letter"
test
test<-mutate(test,daytype=letter_convert(dayletter))
test<-mutate(test,daytype=letter_convert(letter))
test
letter_convert("L")
data_replaced <- mutate(data_replaced, dayletter=weekdays(date,abbreviate=TRUE))
table(data_replaced$dayletter)
data_replaced <- mutate(data_replaced, dayletter=weekdays(date,abbreviate=TRUE),
daytype="weekday")
for(i in 1:nrow(data_replaced)) {
if (data_replaced$dayletter[i]=="L"||data_replaced$dayletter[i]=="P") {
data_replaced$daytype <- "weekend"
}
}
table(data_replaced$daytype)
for(i in 1:nrow(data_replaced)) {
if (data_replaced$dayletter[i]=="L"||data_replaced$dayletter[i]=="P") {
data_replaced$daytype[i] <- "weekend"
}
}
table(data_replaced$daytype)
i=1
(data_replaced$dayletter[i]=="L"||data_replaced$dayletter[i]=="P")
if (data_replaced$dayletter[i]=="L"||data_replaced$dayletter[i]=="P") {
data_replaced$daytype[i] <- "weekend"
}
data_replaced[1,]
if (data_replaced$dayletter[i]=="L"|data_replaced$dayletter[i]=="P") {
data_replaced$daytype[i] <- "weekend"
data_replaced <- mutate(data_replaced, dayletter=weekdays(date,abbreviate=TRUE),
daytype="weekday")
for(i in 1:nrow(data_replaced)) {
if (data_replaced$dayletter[i]=="L"|data_replaced$dayletter[i]=="P") {
data_replaced$daytype[i] <- "weekend"
}
}
}
data_replaced <- mutate(data_replaced, dayletter=weekdays(date,abbreviate=TRUE),
daytype="weekday")
for(i in 1:nrow(data_replaced)) {
if (data_replaced$dayletter[i]=="L"|data_replaced$dayletter[i]=="P") {
data_replaced$daytype[i] <- "weekend"
}
}
table(data_replaced$daytype)
by_interval_new <- group_by(data_replaced, daytype,interval)
blergh <- summarize(by_interval_new,average=mean(steps))
blergh <- transform(blergh, daytype = factor(daytype))
## Make plot with lattice system
xyplot(average~interval|daytype, data = blergh, layout=c(1,2))
xyplot(average~interval|daytype, data = blergh, layout=c(1,2),type="1")
xyplot(average~interval|daytype, data = blergh, layout=c(1,2),type="l")
source('~/R/RepData_PeerAssessment1/PA1.R')
